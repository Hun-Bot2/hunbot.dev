---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE } from '../consts';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import type { ImageMetadata } from 'astro';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = FallbackImage } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- 다국어 폰트 preload -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="preload" as="style" href="https://fonts.googleapis.com/css2?family=Gowun+Dodum&display=swap" />
<link rel="preload" as="style" href="https://fonts.googleapis.com/css2?family=M+PLUS+1p:wght@500&display=swap" />
<link rel="preload" as="style" href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" />

<!-- 다국어 및 지역 설정 -->
<meta name="language" content="Korean" />
<meta name="geo.region" content="KR" />
<meta name="geo.placename" content="South Korea" />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content="Hun-Bot" />
<meta name="keywords" content="뇌공학, AI, 인공지능, 수학, 통계, 개발, 블로그, 기술, Brain Engineering, Mathematics, Statistics, Development" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:locale" content="ko_KR" />
<meta property="og:locale:alternate" content="en_US" />
<meta property="og:locale:alternate" content="ja_JP" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />
<meta property="twitter:creator" content="@Hun-Bot" />

<!-- 추가 SEO 최적화 -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="theme-color" content="#f97316" />
<meta name="msapplication-TileColor" content="#f97316" />

<!-- RSS 및 JSON Feed -->
<link rel="alternate" type="application/json" title={`${SITE_TITLE} JSON Feed`} href={new URL('feed.json', Astro.site)} />

<!-- Performance optimizations -->
<link rel="dns-prefetch" href="//fonts.googleapis.com" />
<link rel="dns-prefetch" href="//fonts.gstatic.com" />

<!-- Structured Data for Website -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "Hun-Bot.dev",
  "description": "뇌공학, AI, 수학, 그리고 개발자의 삶을 기록하는 공간",
  "url": "https://hunbot.dev",
  "author": {
    "@type": "Person",
    "name": "Hun-Bot",
    "url": "https://hunbot.dev",
    "sameAs": [
      "https://github.com/Hun-Bot2"
    ]
  },
  "publisher": {
    "@type": "Person",
    "name": "Hun-Bot",
    "url": "https://hunbot.dev"
  },
  "inLanguage": "ko-KR",
  "potentialAction": {
    "@type": "SearchAction",
    "target": {
      "@type": "EntryPoint",
      "urlTemplate": "https://hunbot.dev/search?q={search_term_string}"
    },
    "query-input": "required name=search_term_string"
  }
}
</script>

<!-- Organization/Person Schema -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Person",
  "name": "Hun-Bot",
  "url": "https://hunbot.dev",
  "sameAs": [
    "https://github.com/Hun-Bot2"
  ],
  "jobTitle": "개발자",
  "description": "뇌공학, AI, 수학 분야의 개발자이자 블로거",
  "knowsAbout": [
    "뇌공학",
    "인공지능",
    "Machine Learning",
    "수학",
    "통계학",
    "웹 개발",
    "데이터 사이언스"
  ]
}
</script>

<!-- 전역 테마 관리 스크립트 (모든 페이지에서 작동) -->
<script is:inline>
	// 테마 초기화 - DOM이 준비되면 실행
	document.addEventListener('DOMContentLoaded', function() {
		const savedTheme = sessionStorage.getItem('neural-blog-theme');
		const isDark = savedTheme ? savedTheme === 'dark' : true;
		
		// body와 html 요소가 존재하는지 확인 후 클래스 설정
		if (document.body) {
			document.body.classList.remove('dark-theme', 'light-theme');
			document.body.classList.add(isDark ? 'dark-theme' : 'light-theme');
		}
		
		if (document.documentElement) {
			document.documentElement.classList.toggle('dark', isDark);
		}
		
		// 테마 토글 버튼 설정
		const themeBtn = document.getElementById('themeToggleBtn');
		const sunIcon = document.getElementById('sunIcon');
		const moonIcon = document.getElementById('moonIcon');
		
		if (themeBtn) {
			themeBtn.setAttribute('data-theme', isDark ? 'dark' : 'light');
			
			// 아이콘 초기 상태 설정
			if (sunIcon && moonIcon) {
				if (isDark) {
					sunIcon.style.opacity = '0';
					moonIcon.style.opacity = '1';
				} else {
					sunIcon.style.opacity = '1';
					moonIcon.style.opacity = '0';
				}
			}
			
			// 테마 토글 이벤트 리스너 추가 (중복 방지)
			if (!themeBtn.hasAttribute('data-listener-added')) {
				themeBtn.setAttribute('data-listener-added', 'true');
				
				themeBtn.addEventListener('click', function() {
					const currentTheme = this.getAttribute('data-theme');
					const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
					
					// body 클래스 업데이트
					if (document.body) {
						document.body.classList.remove('dark-theme', 'light-theme');
						document.body.classList.add(newTheme === 'dark' ? 'dark-theme' : 'light-theme');
					}
					
					// html 클래스 업데이트
					if (document.documentElement) {
						document.documentElement.classList.toggle('dark', newTheme === 'dark');
					}
					
					// 아이콘 업데이트
					if (sunIcon && moonIcon) {
						if (newTheme === 'dark') {
							sunIcon.style.opacity = '0';
							moonIcon.style.opacity = '1';
						} else {
							sunIcon.style.opacity = '1';
							moonIcon.style.opacity = '0';
						}
					}
					
					// 상태 저장
					this.setAttribute('data-theme', newTheme);
					sessionStorage.setItem('neural-blog-theme', newTheme);
				});
			}
		}
	});
	
	// 페이지 로드 전 깜빡임 방지를 위한 즉시 실행 (안전하게)
	(function() {
		try {
			const savedTheme = sessionStorage.getItem('neural-blog-theme');
			const isDark = savedTheme ? savedTheme === 'dark' : true;
			
			// html 요소에만 클래스 추가 (body는 아직 없을 수 있음)
			if (document.documentElement) {
				document.documentElement.classList.toggle('dark', isDark);
			}
		} catch (e) {
			console.warn('Theme initialization error:', e);
		}
	})();
</script>