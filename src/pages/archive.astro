---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getCollection } from 'astro:content';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

// 모든 블로그 포스트 가져오기
const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// 연도별로 포스트 그룹화
const postsByYear = posts.reduce((acc, post) => {
	const year = post.data.pubDate.getFullYear();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(post);
	return acc;
}, {} as Record<number, typeof posts>);

// 연도를 내림차순으로 정렬
const sortedYears = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a));
---

<html lang="ko">
	<head>
		<BaseHead title={`Archive - ${SITE_TITLE}`} description={`${SITE_DESCRIPTION} - 모든 글 아카이브`} />
	</head>
	<body class="bg-gray-50 dark:bg-gray-900">
		<Header />
		
		<!-- 메인 컨테이너: 다른 페이지와 일관된 스타일 -->
		<div class="min-h-[calc(100vh-8rem)] mx-2 my-4 bg-white dark:bg-slate-800 rounded-2xl shadow-lg border border-gray-200 dark:border-slate-700">
			<!-- 페이지 제목 -->
			<div class="pt-12 pb-8 text-center">
				<h1 class="text-4xl lg:text-5xl font-bold bg-gradient-to-r from-emerald-600 via-green-500 to-teal-500 bg-clip-text text-transparent">
					Archive
				</h1>
				<p class="text-lg text-gray-600 dark:text-gray-400 mt-4">
					총 {posts.length}개의 글이 있습니다
				</p>
			</div>

			<!-- 메인 컨텐츠 영역 -->
			<main class="mx-4 md:mx-8 max-w-7xl lg:mx-auto pb-12">
				<!-- 폴더 구조 스타일 아카이브 -->
				<div class="space-y-6">
					{sortedYears.map(year => (
						<div class="folder-container">
							<!-- 연도 폴더 헤더 -->
							<div class="folder-header group cursor-pointer" onclick={`toggleFolder('${year}')`}>
								<div class="flex items-center gap-3 p-4 bg-emerald-50 dark:bg-emerald-900/20 hover:bg-emerald-100 dark:hover:bg-emerald-900/30 rounded-lg border border-emerald-200 dark:border-emerald-800 transition-colors duration-200">
									<!-- 폴더 아이콘 -->
									<svg class="w-6 h-6 text-emerald-600 dark:text-emerald-400 folder-icon transition-transform duration-200" fill="currentColor" viewBox="0 0 20 20">
										<path d="M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"></path>
									</svg>
									
									<!-- 연도와 개수 -->
									<div class="flex items-center gap-4 flex-1">
										<h2 class="text-xl font-bold text-gray-900 dark:text-gray-100">
											{year}
										</h2>
										<span class="text-sm text-gray-500 dark:text-gray-400 bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded-full">
											{postsByYear[parseInt(year)].length} items
										</span>
									</div>
									
									<!-- 화살표 -->
									<svg class="w-5 h-5 text-gray-400 dark:text-gray-500 arrow-icon transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
									</svg>
								</div>
							</div>

							<!-- 연도별 포스트 목록 -->
							<div class="folder-content ml-6 mt-3 space-y-2" id={`folder-${year}`}>
								{postsByYear[parseInt(year)].map(post => (
									<a href={`/blog/${post.id}/`} class="file-item group">
										<div class="flex items-center gap-3 p-3 hover:bg-gray-50 dark:hover:bg-slate-700/50 rounded-lg border border-transparent hover:border-gray-200 dark:hover:border-slate-600 transition-all duration-200">
											<!-- 파일 아이콘 -->
											<svg class="w-5 h-5 text-blue-500 dark:text-blue-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
												<path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
											</svg>
											
											<!-- 파일 정보 -->
											<div class="flex-1 min-w-0">
												<div class="flex items-center gap-3 mb-1">
													<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 group-hover:text-emerald-600 dark:group-hover:text-emerald-400 transition-colors duration-200 truncate">
														{post.data.title}
													</h3>
													{post.data.category && (
														<span class="text-xs text-emerald-600 dark:text-emerald-400 bg-emerald-100 dark:bg-emerald-900/30 px-2 py-0.5 rounded-full flex-shrink-0">
															{post.data.category}
														</span>
													)}
												</div>
												
												<div class="flex items-center gap-4 text-xs text-gray-500 dark:text-gray-400">
													<FormattedDate date={post.data.pubDate} />
													{post.data.tags && post.data.tags.length > 0 && (
														<span class="truncate">
															{post.data.tags.slice(0, 3).join(', ')}
														</span>
													)}
												</div>
											</div>
											
											<!-- 파일 크기 (읽기 시간) -->
											<div class="text-xs text-gray-400 dark:text-gray-500 flex-shrink-0">
												{Math.max(1, Math.ceil((post.data.description?.length || 100) / 1000))} min
											</div>
										</div>
									</a>
								))}
							</div>
						</div>
					))}
				</div>
				
				<!-- 빈 상태 -->
				{posts.length === 0 && (
					<div class="text-center py-16">
						<div class="w-24 h-24 mx-auto mb-6 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-2xl flex items-center justify-center">
							<div class="text-4xl text-white">📁</div>
						</div>
						<h3 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-2">
							아직 작성된 글이 없습니다
						</h3>
						<p class="text-gray-600 dark:text-gray-400">
							첫 번째 블로그 포스트를 작성해보세요!
						</p>
					</div>
				)}
			</main>
		</div>
		
		<Footer />
		
		<script is:inline>
			// 폴더 토글 기능
			function toggleFolder(year) {
				const folder = document.getElementById('folder-' + year);
				const arrow = document.querySelector('[onclick="toggleFolder(\'' + year + '\')"] .arrow-icon');
				
				if (folder && arrow) {
					const isOpen = !folder.classList.contains('hidden');
					
					if (isOpen) {
						folder.classList.add('hidden');
						arrow.style.transform = 'rotate(-90deg)';
					} else {
						folder.classList.remove('hidden');
						arrow.style.transform = 'rotate(0deg)';
					}
				}
			}
			
			// 전역 함수로 등록
			window.toggleFolder = toggleFolder;
			
			// 초기 상태: 모든 폴더 열림
			document.addEventListener('DOMContentLoaded', function() {
				const folders = document.querySelectorAll('.folder-content');
				folders.forEach(function(folder) {
					folder.classList.remove('hidden');
				});
			});
		</script>
		
		<style>
			.folder-content {
				max-height: 1000px;
				overflow: hidden;
				transition: max-height 0.3s ease-in-out;
			}
			
			.folder-content.hidden {
				max-height: 0;
			}
			
			.file-item:hover .file-icon {
				transform: scale(1.1);
			}
		</style>
	</body>
</html> 