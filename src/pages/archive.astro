---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getCollection } from 'astro:content';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

// 모든 블로그 포스트 가져오기
const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// 연도별로 포스트 그룹화
const postsByYear = posts.reduce((acc, post) => {
	const year = post.data.pubDate.getFullYear();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(post);
	return acc;
}, {} as Record<number, typeof posts>);

// 연도를 내림차순으로 정렬
const sortedYears = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a));
---

<html lang="ko">
	<head>
		<BaseHead title={`Archive - ${SITE_TITLE}`} description={`${SITE_DESCRIPTION} - 모든 글 아카이브`} />
	</head>
	<body>
		<Header />
		<main class="max-w-4xl mx-auto px-6 py-16 min-h-screen">
			<!-- 페이지 헤더 -->
			<header class="text-center mb-16">
				<h1 class="text-4xl lg:text-5xl font-bold text-slate-800 dark:text-slate-200 mb-4">
					Archive
				</h1>
				<p class="text-lg text-slate-600 dark:text-slate-400">
					총 {posts.length}개의 글이 있습니다
				</p>
				<div class="w-24 h-1 bg-gradient-to-r from-purple-500 via-pink-500 to-cyan-500 mx-auto mt-6 rounded-full"></div>
			</header>

			<!-- 아카이브 리스트 -->
			<div class="space-y-12">
				{sortedYears.map(year => (
					<section class="archive-year">
						<!-- 연도 헤더 -->
						<div class="flex items-center gap-6 mb-8">
							<h2 class="text-3xl font-bold text-slate-800 dark:text-slate-200">
								{year}
							</h2>
							<div class="flex items-center gap-3">
								<div class="w-3 h-3 rounded-full bg-gradient-to-r from-purple-500 to-cyan-500"></div>
								<span class="text-slate-500 dark:text-slate-400 font-medium">
									{postsByYear[parseInt(year)].length} posts
								</span>
							</div>
							<div class="flex-1 h-px bg-gradient-to-r from-slate-300 to-transparent dark:from-slate-600"></div>
						</div>

						<!-- 해당 연도의 포스트들 -->
						<div class="space-y-6 ml-8">
							{postsByYear[parseInt(year)].map(post => (
								<article class="group relative">
									<div class="absolute left-[-2rem] top-2 w-2 h-2 rounded-full bg-slate-300 dark:bg-slate-600 group-hover:bg-purple-500 transition-colors duration-300"></div>
									<div class="absolute left-[-1.875rem] top-3 w-px h-full bg-slate-200 dark:bg-slate-700"></div>
									
									<a href={`/blog/${post.id}/`} class="block p-6 bg-white dark:bg-slate-900 hover:bg-slate-50 dark:hover:bg-slate-800 border border-slate-200 dark:border-slate-700 hover:border-purple-300 dark:hover:border-purple-600 rounded-xl transition-all duration-300 hover:-translate-y-1 hover:shadow-lg">
										<div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
											<div class="flex-1 space-y-3">
												<!-- 날짜와 카테고리 -->
												<div class="flex items-center gap-4 text-sm">
													<time class="font-mono text-slate-500 dark:text-slate-400 bg-slate-100 dark:bg-slate-800 px-3 py-1 rounded-md">
														<FormattedDate date={post.data.pubDate} />
													</time>
													{post.data.category && (
														<span class="px-3 py-1 text-xs font-semibold text-purple-600 dark:text-purple-400 bg-purple-100 dark:bg-purple-900/30 rounded-full">
															{post.data.category}
														</span>
													)}
												</div>
												
												<!-- 제목 -->
												<h3 class="text-xl font-bold text-slate-900 dark:text-slate-100 group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors duration-300">
													{post.data.title}
												</h3>
												
												<!-- 설명 -->
												{post.data.description && (
													<p class="text-slate-600 dark:text-slate-300 leading-relaxed line-clamp-2">
														{post.data.description}
													</p>
												)}
												
												<!-- 태그들 -->
												{post.data.tags && post.data.tags.length > 0 && (
													<div class="flex flex-wrap gap-2 pt-2">
														{post.data.tags.slice(0, 4).map((tag: string) => (
															<span class="text-xs font-medium text-slate-600 dark:text-slate-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors duration-200">
																#{tag}
															</span>
														))}
													</div>
												)}
											</div>
											
											<!-- Read more 버튼 -->
											<div class="flex items-center text-sm font-medium text-purple-600 dark:text-purple-400 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
												Read more
												<svg class="w-4 h-4 ml-1 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
												</svg>
											</div>
										</div>
									</a>
								</article>
							))}
						</div>
					</section>
				))}
			</div>

			<!-- 빈 상태 -->
			{posts.length === 0 && (
				<div class="text-center py-16">
					<div class="text-6xl mb-4">📝</div>
					<h3 class="text-xl font-semibold text-slate-800 dark:text-slate-200 mb-2">
						아직 작성된 글이 없습니다
					</h3>
					<p class="text-slate-600 dark:text-slate-400">
						첫 번째 블로그 포스트를 작성해보세요!
					</p>
				</div>
			)}
		</main>
		<Footer />
	</body>
</html>

<style>
	/* 타임라인 스타일 */
	.archive-year:last-child .absolute.w-px {
		display: none;
	}
	
	/* 라인 클램프 유틸리티 */
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	/* 반응형 조정 */
	@media (max-width: 768px) {
		.archive-year .ml-8 {
			margin-left: 1.5rem;
		}
		
		.archive-year .absolute.left-\[-2rem\] {
			left: -1rem;
		}
		
		.archive-year .absolute.left-\[-1\.875rem\] {
			left: -0.9375rem;
		}
	}
</style> 