---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE } from '../../consts';
import { getAllPosts } from '../../utils/blog.ts';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = await getAllPosts();
---

<!doctype html>
<html lang="ko">
	<head>
		<BaseHead title={`블로그 - ${SITE_TITLE}`} description="모든 글 목록" />
	</head>
	<body>
		<Header />
		<div class="global-wrapper">
			<main>
				<h1 style="margin-bottom: var(--spacing-4); color: rgb(248, 249, 250);">블로그</h1>
				<p style="margin-bottom: var(--spacing-8); color: rgba(248, 249, 250, 0.8);">총 {posts.length}개의 글</p>
				{posts.length === 0 ? (
					<p>아직 글이 없습니다.</p>
				) : (
					<ol style="list-style: none; padding: 0;">
						{posts.map((post) => (
							<li>
								<article class="post-list-item" itemscope itemtype="http://schema.org/Article">
								<header>
									<h2 style="margin-bottom: var(--spacing-2); margin-top: var(--spacing-8);">
										<a href={`/blog/${post.id}/`} itemprop="url" style="text-decoration: none; color: rgb(248, 249, 250);">
											<span itemprop="headline">{post.data.title}</span>
										</a>
									</h2>
									<small style="color: rgba(248, 249, 250, 0.6);"><FormattedDate date={post.data.pubDate} /></small>
								</header>
									{post.data.description && (
										<section>
											<p itemprop="description" style="margin-bottom: 0; margin-top: var(--spacing-2); color: rgba(248, 249, 250, 0.8);">
												{post.data.description}
											</p>
										</section>
									)}
								</article>
							</li>
						))}
					</ol>
				)}
			</main>
		</div>
		<Footer />
	</body>
</html>